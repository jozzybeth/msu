include console.inc

COMMENT ~

С-р 20  (максимально 60 очков)

Горина Елизавета 112

~
COMMENT~ 
----------------------------------------------------------------------------
ВНИМАНИЕ: ВСЕ ИСПОЛЬЗУЕМЫЕ ОПИСАНИЯ ПЕРЕМЕННЫХ и КОНСТАНТ ДАЮТСЯ В СЕКЦИИ
ДАННЫХ ЭТОЙ ПРОГРАММЫ !!!
---------------------------------------------------------------------------- 
 ЗАДАЧА 
 
 Описать функцию Search(Str1,Str2,n,k), где Str1 и Str2 - символьные строки
 фиксированной длины из n символов каждая (n>0 в формате двойного слова), 
 k - число (в формате двойного слова) из диапазона от 1 до n. 
 Функция определяет, входят ли первые k символов строки Str2 в строку Str1
 как ПОДСТРОКА. Если ДА, то функция возвращает через регистр EAX номер позиции
 (в строке Str1), начиная с которой найдено первое вхождение искомой ПОДСТРОКИ
 (позиции в Str1 нумеруются с НУЛЯ!). Если НЕТ, то функция возвращает через 
 ЕАХ ответ  -1 (минус единицу).
 =============================================================================
 Требования. 
 =============================================================================
 1) Параметры Str1 и Str2 должны быть переданы по ссылке, параметры n и k - 
 по значению (+ cтандартные соглашения о связях stdcall).
 -----------------------------------------------------------------------------  
 2) Применить функцию Search(Str1,Str2,n,k) к следующим данным:
 Search(S1,S2,n,k). Описание имён S1, S2, n и k приведено ниже в секции данных.
 Значение для k следует предварительно ввести с клавиатуры.
 Найденное значение индекса (которое возвращается через ЕАХ) - 
 напечатать из основной программы после вызова функции Search.
 Этот пункт в программе уже РЕАЛИЗОВАН, содержимое секции кода - не менять!!!
 -----------------------------------------------------------------------------
 3) Важное требование: в решении использовать команду cmpsb в паре с нужным 
 префиксом повторения для поиска подстроки (при очередной попытке). 
 
 См. КОММЕНТАРИЙ в конце (после директивы end) про УПРОЩЁННУЮ ПОСТАНОВКУ
 этой задачи, но на 30 очков (если в ИСХОДНОЙ ПОСТАНОВКЕ задачу решить сложно)
 ============================================================================= 
 Примеры работы программы для S1 и S2 с описанными (в .data) значениями
 (для тестирования процедуры Search):
 k = 1   i = 0
 k = 2   i = 0
 k = 3   i = 2
 k = 4   i = 5
 k = 5   i = 9
 k = 6   i = 17
 k = 11  i = 17
 k = 12  i = -1
 k = 28  i = -1
 Здесь значение для k запрашивается программой и вводится с клавиатуры, 
 значение для i (индекса вхождения) - вычисляется и печатается на экран.
==============================================================================
Отправить НА ПРОВЕРКУ в следующем виде:
Если программа доведена до работоспособного состояния (выдаёт правильные
результаты, как в вышеприведённых тестах) - прислать zip-архив с файлами: 
asm, lst и exe по этой программе + СКРИНШОТ ЭКРАНА с результатами работы
вашей программы на всех вышеприведённых тестах. Если же программа не работает
или не дописана до конца - поместить в архив только файл 1.asm.
Если вы решили задачу в исходной постановке, то ничего не меняйте в строке 74 
(где описано T). Если вы решили задачу в упрощённой постановке, то  укажите в
строке 74 - какой УПРОЩЁННЫЙ вариант вы сдаёте (информация в конце этого файла)
------------------------------------------------------------------------------
Можно СДАВАТЬ ЧЕРЕЗ DISCORD (если прошли все тесты); для этого надо туда зайти 
и написать в очередь запрос на сдачу (но предваритльно отправить на проверку
блоков сдаваемое решение - по вышеуказанным правилам) - если я буду в discord-e 
==============================================================================
~
.data
T   db  "Задача (с-р 20) Горина 112 (ИСХОДНАЯ постановка)",0

S1  db "ababcabcdabcdelmnabcdefghijk"
S2  db "abcdefghijklmnopqrstuvwxyzab"

n   equ ($-S2)                ; длина одной строки (=28)
k   dd ?                      ; длина искомой подстроки (1..n)

.code
;-----------------------------------------------------------------------------
; procedure Search(var Str1, Str2: array of byte; n, k: longword)
;-----------------------------------------------------------------------------
Search proc
    push EBP
    mov EBP,ESP
    push EBX
    push ECX
    push EDX
    push EDI
    push ESI
    mov ESI,[EBP+8]     ;- адрес Str1
    mov EDI,[EBP+12]    ;- адрес Str2
    mov EDX,[EBP+16]    ;- значение n
    mov EBX,[EBP+20]    ;- значение k
; далее ваше описание процедуры:
    cld
    mov EAX,0
@L: mov ECX,EBX    
    repE  cmpsb
    jZ @reg
    sub EDI,EBX
    add EDI,ECX
    inc EAX
    sub ESI,EBX
    add ESI,ECX
    inc ESI
    cmp EAX,EDX
    jNE @L
    mov EAX,-1
    jmp @reg
@reg:
    pop ESI
    pop EDI
    pop EDX
    pop ECX
    pop EBX
    pop EBX
    ret 4*4
Search endp
;----------------------------------------------------------------------------- 
Start:
    ; здесь ничего не менять и ничего не добавлять !!!
    ConsoleTitle offset T	
    ; считать, что значение для k будет введено корректно (от 1 до n)
    inint k,"k = "
    push k
    push n
    push offset S2
    push offset S1
    call Search
    outintln EAX,,"i = "  
 
    pause						; нужно при сдаче по e-mail
    exit						
end Start
-------------------------------------------------------------------
КОММЕНТАРИЙ (упрощённая постановка задачи - на 30 очков вместо 60):
-------------------------------------------------------------------
Упрощённый вариант_1 (40 очков):
Если сложно вычислить индекс первого вхождения, то можно дать ответ в 
более простом варианте:
Если ДА (входит), то возвращает через регистр EAX значение 0 (ноль).
Если НЕТ (не входит), то возвращает через ЕАХ ответ -1 (минус единицу).
Указать (обязательно!) в строке 74 при описании переменной Т, что 
выбрана более простая постановка задачи в упрощённом варианте_1
(для облегчения проверки). Но при этом остаётся требование решать с 
использованием команды cmpsb в паре с нужным префиксом повторения !!!
-------------------------------------------------------------------
Упрощённый вариант_2 (30 очков):
Если не знаете как использовать команду cmpsb в паре с нужным префиксом
повторения для поиска подстроки (при очередной попытке), то решайте как 
умеете (без строковых команд). Указать (обязательно!) в строке 74 
при описании переменной Т, что выбрана более простая постановка задачи
в упрощённом варианте_2 (для облегчения проверки). 
-------------------------------------------------------------------


 